---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: snapshot-operator
  annotations:
    policies.kyverno.io/title: Snapshot Operator
    policies.kyverno.io/subject: PersistentVolumeClaim
    policies.kyverno.io/description: |
      This policy creates a Kopia snapshot CronJob for labeled PersistentVolumeClaims
spec:
  generateExistingOnPolicyUpdate: true
  mutateExistingOnPolicyUpdate: true
  rules:
    - name: create-cronjob
      match:
        any:
          - resources:
              kinds:
                - PersistentVolumeClaim
              selector:
                matchLabels:
                  snapshot.home.arpa/enabled: "true"
                  app.kubernetes.io/name: "*"
                  app.kubernetes.io/instance: "*"
      context:
        - name: appName
          variable:
            jmesPath: "request.object.metadata.labels.\"app.kubernetes.io/name\""
        - name: instanceName
          variable:
            jmesPath: "request.object.metadata.labels.\"app.kubernetes.io/instance\""
        - name: claimName
          variable:
            jmesPath: "request.object.metadata.name"
        - name: namespace
          variable:
            jmesPath: "request.object.metadata.namespace"
      generate:
        synchronize: true
        apiVersion: batch/v1
        kind: CronJob
        name: "{{ claimName }}-snapshot"
        namespace: "{{ namespace }}"
        data:
          metadata:
            labels:
              app.kubernetes.io/name: "{{ appName }}"
              app.kubernetes.io/instance: "{{ instanceName }}"
            ownerReferences:
              - apiVersion: "{{ request.object.apiVersion }}"
                kind: "{{ request.object.kind }}"
                name: "{{ request.object.metadata.name }}"
                uid: "{{ request.object.metadata.uid }}"
          spec:
            schedule: "0 3 * * *"
            suspend: false
            concurrencyPolicy: Forbid
            successfulJobsHistoryLimit: 1
            failedJobsHistoryLimit: 2
            jobTemplate:
              spec:
                ttlSecondsAfterFinished: 86400 # 24h
                template:
                  spec:
                    automountServiceAccountToken: false
                    restartPolicy: OnFailure
                    # Stagger jobs to run randomly within X seconds to avoid bringing down all apps at once
                    initContainers:
                      - name: wait
                        image: ghcr.io/onedr0p/alpine:3.16.2@sha256:35dc08b62b80ebd6d9a4e46ff1c4503967d4c0ca6a9ca8b04e299102b0319bf6
                        command: ["/scripts/sleep.sh"]
                        args: ["1", "900"]
                    containers:
                      - name: snapshot
                        image: ghcr.io/onedr0p/kopia:0.11.3@sha256:46eefda38f842c3f03c4329e68f1f8c3be36ea324f11d458724719d8ab2fb53d
                        env:
                          - name: KOPIA_CACHE_DIRECTORY
                            value: /snapshots/{{ claimName }}/cache
                          - name: KOPIA_LOG_DIR
                            value: /snapshots/{{ claimName }}/logs
                          - name: KOPIA_PASSWORD
                            value: "${SECRET_KOPIA_PASSWORD}"
                        command:
                          - /bin/bash
                          - -c
                          - |-
                            echo "[01/08] Create repo ..."           && [[ ! -f /snapshots/kopia.repository.f ]] && kopia repository create filesystem --path=/snapshots
                            echo "[02/08] Connect to repo ..."       && kopia repo connect filesystem --path=/snapshots --override-hostname=cluster --override-username=root
                            echo "[03/08] Set policies ..."          && kopia policy set /data/{{ claimName }} --compression=zstd --keep-latest 14 --keep-hourly 0 --keep-daily 0 --keep-weekly 0 --keep-monthly 0 --keep-annual 0
                            echo "[04/08] Snapshot ..."              && kopia snap create /data/{{ claimName }}
                            echo "[05/08] List snapshots ..."        && kopia snap list /data/{{ claimName }}
                            echo "[06/08] Show stats ..."            && kopia content stats
                            echo "[07/08] Show maintenance info ..." && kopia maintenance info
                            echo "[08/08] Disconnect from repo ..."  && kopia repo disconnect
                        volumeMounts:
                          - name: data
                            mountPath: "/data/{{ claimName }}"
                          - name: snapshots
                            mountPath: /snapshots
                        securityContext:
                          privileged: true
                    volumes:
                      - name: data
                        persistentVolumeClaim:
                          claimName: "{{ claimName }}"
                      - name: snapshots
                        nfs:
                          server: "${NAS_ADDR}"
                          path: /volume1/backups/kopia
