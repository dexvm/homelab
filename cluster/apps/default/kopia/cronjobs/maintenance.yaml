---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: kopia-maintenance
  namespace: default
spec:
  schedule: "0 5 * * *"
  suspend: false
  concurrencyPolicy: "Forbid"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 2
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 86400
      template:
        spec:
          automountServiceAccountToken: false
          restartPolicy: OnFailure
          initContainers:
            - name: wait-for-repo
              image: ghcr.io/onedr0p/kopia:0.13.0@sha256:dda0c5516c096692da649282dc3da42855dcf4de6814f127f2b201882dca20de
              command:
                - /bin/bash
                - -c
                - |-
                  until [ -f /snapshots/kopia.repository.f ]; do
                      printf "\e[1;32m%-6s\e[m\n" "Awaiting for the Kopia repo to become ready ..."
                      sleep 1
                  done
              volumeMounts:
                - name: snapshots
                  mountPath: /snapshots
          containers:
            - name: maintenance
              image: ghcr.io/onedr0p/kopia:0.13.0@sha256:dda0c5516c096692da649282dc3da42855dcf4de6814f127f2b201882dca20de
              env:
                - name: TZ
                  value: Europe/Berlin
                - name: KOPIA_CACHE_DIRECTORY
                  value: /snapshots/cache
                - name: KOPIA_LOG_DIR
                  value: /snapshots/logs
                - name: KOPIA_PASSWORD
                  value: "${SECRET_KOPIA_PASSWORD}"
              command:
                - /bin/bash
                - -c
                - |
                  echo "[01/04] Connect to repo ..."       && kopia repo connect filesystem --path=/snapshots --override-hostname=cluster --override-username=root
                  echo "[02/04] Set maintenance owner ..." && kopia maintenance set --owner=root@cluster
                  echo "[03/04] Run maintenance ..."       && kopia maintenance run --full
                  echo "[04/04] Disconnect from repo ..."  && kopia repo disconnect
              volumeMounts:
                - name: snapshots
                  mountPath: /snapshots
              securityContext:
                privileged: true
          volumes:
            - name: snapshots
              nfs:
                server: "${NAS_ADDR}"
                path: /volume1/backups/kopia
