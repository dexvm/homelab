---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: firefly-iii
  namespace: default
spec:
  selector:
    matchLabels:
      app: firefly-iii
  template:
    metadata:
      labels:
        app: firefly-iii
    spec:
      containers:
        - image: fireflyiii/core:version-5.7.6
          name: firefly-iii
          ports:
            - containerPort: 8080
          envFrom:
            - secretRef:
                name: firefly-iii-secret
                namespace: default
            - configMapRef:
                name: firefly-iii-config
                namespace: default
          env:
            - name: DB_DATABASE
              value: "${DEFAULT_FIREFLY_III_DB_NAME}"
            - name: DB_USERNAME
              value: "${DEFAULT_FIREFLY_III_DB_USER}"
            - name: DB_PASSWORD
              value: "${DEFAULT_FIREFLY_III_DB_PASS}"
          volumeMounts:
            - name: firefly-iii-uploads
              mountPath: /var/www/html/storage/upload
      volumes:
        - name: firefly-iii-uploads
          persistentVolumeClaim:
            claimName: firefly-iii-uploads-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: firefly-iii-db
  namespace: default
spec:
  selector:
    matchLabels:
      app: firefly-iii-db
  template:
    metadata:
      labels:
        app: firefly-iii-db
    spec:
      containers:
        - image: postgres:14.5-alpine
          name: firefly-iii-db
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "${DEFAULT_FIREFLY_III_DB_NAME}"
            - name: POSTGRES_USER
              value: "${DEFAULT_FIREFLY_III_DB_USER}"
            - name: POSTGRES_PASSWORD
              value: "${DEFAULT_FIREFLY_III_DB_PASS}"
          volumeMounts:
            - name: firefly-iii-db
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: firefly-iii-db
          persistentVolumeClaim:
            claimName: firefly-iii-db-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: firefly-iii-cron
  namespace: default
spec:
  selector:
    matchLabels:
      app: firefly-iii-cron
  template:
    metadata:
      labels:
        app: firefly-iii-cron
    spec:
      containers:
        - image: alpine:latest
          name: firefly-iii-cron
          command:
            - "/bin/sh"
          args:
            - "-c"
            - 'echo "0 3 * * * wget -qO- http://firefly-iii:8080/api/v1/cron/$(CRON_TOKEN)" | crontab - && crond -f -L /dev/stdout'
          env:
            - name: CRON_TOKEN
              valueFrom:
                secretKeyRef:
                  name: firefly-iii-secret
                  key: STATIC_CRON_TOKEN
