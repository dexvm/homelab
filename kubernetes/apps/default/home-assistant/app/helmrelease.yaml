---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: longhorn
      namespace: longhorn-system
  values:
    image:
      repository: ghcr.io/home-assistant/home-assistant
      tag: 2023.8.1
    env:
      TZ: "${TIMEZONE}"
    envFrom:
      - secretRef:
          name: pg-home-assistant-user
    hostNetwork: true
    dnsPolicy: ClusterFirstWithHostNet
    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        annotations:
          # external-dns.alpha.kubernetes.io/hostname: "ha.${SECRET_DOMAIN}"
          io.cilium/lb-ipam-ips: "${VIP_HOME_ASSISTANT}"
        ports:
          http:
            port: 8123
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
        hosts:
          - host: &host "ha.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    # TODO: maybe enable probes
    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false
    nodeSelector:
      kubernetes.io/hostname: helios
    persistence:
      config:
        enabled: true
        mountPath: /config
        existingClaim: home-assistant-config
      dbus:
        enabled: true
        type: hostPath
        hostPath: /run/dbus
    additionalContainers:
      appdaemon:
        name: appdaemon
        image: docker.io/acockburn/appdaemon:4.4.2
        env:
          - name: TZ
            value: "${TIMEZONE}"
        volumeMounts:
          - name: config
            subPath: appdaemon
            mountPath: /conf
    addons:
      codeserver:
        enabled: true
        image:
          repository: codercom/code-server
          tag: 4.13.0
        env:
          TZ: "${TIMEZONE}"
        workingDir: "/config"
        args:
          - --auth
          - "none"
          - --user-data-dir
          - "/config/.vscode"
          - --extensions-dir
          - "/config/.vscode"
        volumeMounts:
          - name: config
            mountPath: /config
    resources:
      requests:
        memory: 750Mi
        cpu: 200m
      limits:
        memory: 2500Mi
