{
  extends: [
    ":enableRenovate",
    "config:base",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":separatePatchReleases",
    "docker:enableMajor",
    ":enablePreCommit",
    "github>xmd3/homelab//.github/renovate/autoMerge.json5",
    "github>xmd3/homelab//.github/renovate/labels.json5",
    "github>xmd3/homelab//.github/renovate/semanticCommits.json5",
    "github>xmd3/homelab//.github/renovate/groups.json5",
  ],
  timezone: "Europe/Berlin",
  semanticCommits: "enabled",
  dependencyDashboardTitle: "Renovate Dashboard",
  suppressNotifications: ["prIgnoreNotification"],
  rebaseWhen: "conflicted",
  commitBodyTable: true,
  ignoreDeps: [
    "ghcr.io/fluxcd/helm-controller",
    "ghcr.io/fluxcd/image-automation-controller",
    "ghcr.io/fluxcd/image-reflector-controller",
    "ghcr.io/fluxcd/kustomize-controller",
    "ghcr.io/fluxcd/notification-controller",
    "ghcr.io/fluxcd/source-controller",
  ],
  "pre-commit": {
    enabled: true,
  },
  flux: {
    fileMatch: ["cluster/.+\\.ya?ml$"],
  },
  "helm-values": {
    fileMatch: ["cluster/.+\\.ya?ml$"],
  },
  kubernetes: {
    fileMatch: [
      "cluster/.+\\.ya?ml$",
      "ansible/.+\\.ya?ml.j2$",
    ],
  },
  regexManagers: [
    {
      description: "Process CRD dependencies",
      fileMatch: ["cluster/crds/.+\\.ya?ml$"],
      matchStrings: [
        // GitRepository and Flux Kustomization where 'Git release/tag' matches 'Helm' version
        "registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n.*?(?<currentValue>[^-\\s]*)\n",
        // Kustomization where 'GitHub release artifact URL' matches 'Docker image' version
        "datasource=(?<datasource>\\S+) image=(?<depName>\\S+)\n.*?-\\s(.*?)\/(?<currentValue>[^/]+)\/[^/]+\n",
      ],
      datasourceTemplate: "{{#if datasource}}{{{datasource}}}{{else}}helm{{/if}}",
    },
    {
      description: "Process various other dependencies",
      fileMatch: [
        "ansible/.+\\.ya?ml$",
        "cluster/.+\\.ya?ml$",
      ],
      matchStrings: [
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?\"(?<currentValue>.*)\"\n",
      ],
      datasourceTemplate: "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
    },
  ],
  packageRules: [
    // setup datasources
    {
      matchDatasources: ["helm"],
      separateMinorPatch: true,
      ignoreDeprecated: true,
    },
    // global docker datasource settings
    {
      matchDatasources: ["docker"],
      enabled: true,
      commitMessageTopic: "container image {{depName}}",
      commitMessageExtra: "to {{#if isSingleVersion}}v{{{newVersion}}}{{else}}{{{newValue}}}{{/if}}",
      matchUpdateTypes: ["major", "minor", "patch"],
    },
  ],
}
