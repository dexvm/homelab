---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: ingress-add-external-dns-target
spec:
  mutateExistingOnPolicyUpdate: true
  generateExistingOnPolicyUpdate: true
  rules:
    - name: ingress-add-external-dns-target
      match:
        any:
          - resources:
              kinds:
                - Ingress
              annotations:
                external.home.arpa/enabled: "true"
      # exclude when explicit target set
      exclude:
        any:
          - resources:
              annotations:
                external-dns.alpha.kubernetes.io/target: "*"
      mutate:
        patchStrategicMerge:
          metadata:
            annotations:
              +(external-dns.alpha.kubernetes.io/target): "eos.${SECRET_DOMAIN}"

---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: ingress-add-lan-whitelist
spec:
  mutateExistingOnPolicyUpdate: true
  generateExistingOnPolicyUpdate: true
  rules:
    - name: ingress-add-lan-whitelist
      match:
        any:
          - resources:
              kinds:
                - Ingress
      exclude:
        any:
          - resources:
              annotations:
                external.home.arpa/enabled: "true"
      mutate:
        patchStrategicMerge:
          metadata:
            annotations:
              +(nginx.ingress.kubernetes.io/whitelist-source-range): "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"

---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: ingress-add-auth
spec:
  mutateExistingOnPolicyUpdate: true
  generateExistingOnPolicyUpdate: true
  rules:
    - name: ingress-add-auth
      match:
        any:
          - resources:
              kinds:
                - Ingress
              annotations:
                auth.home.arpa/enabled: "true"
      mutate:
        patchStrategicMerge:
          metadata:
            annotations:
              +(nginx.ingress.kubernetes.io/auth-method): GET
              +(nginx.ingress.kubernetes.io/auth-url): |-
                http://authelia.default.svc.cluster.local/api/verify
              +(nginx.ingress.kubernetes.io/auth-signin): |-
                https://auth.${SECRET_DOMAIN}?rm=$request_method
              +(nginx.ingress.kubernetes.io/auth-response-headers): |-
                Remote-User,Remote-Name,Remote-Groups,Remote-Email
              +(nginx.ingress.kubernetes.io/auth-snippet): |
                proxy_set_header X-Forwarded-Method $request_method;
